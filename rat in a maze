void solver(vector<vector<int>> &m, int n, vector<string> &ans, string s, int i, int j){
        if(i<0 || j<0 || i>=n || j>=n || m[i][j] == 0){
            return ;
        }
        if(i == n-1 && j == n-1){
            ans.push_back(s);
            s = "";
            return ;
        }
        m[i][j] = 0;
        if(i+1 < n){
            solver(m,n,ans,s+"D",i+1,j);
        }
        if(j+1 < n){
            solver(m,n,ans,s+"R",i,j+1);
        }
        if(i-1 >= 0){
            solver(m,n,ans,s+"U",i-1,j);
        }
        if(j-1 >= 0 ){
            solver(m,n,ans,s+"L",i,j-1);
        }
        m[i][j] = 1;
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        string s = "";
        solver(m,n,ans,s,0,0);
        return ans;
    }
